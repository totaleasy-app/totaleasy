services:
  totaleasy-backend:
    container_name: totaleasy_backend
    build:
      context: ./backend/
      dockerfile: Dockerfile
    image: totaleasy-backend
    ports:
      - '8080:8080'
    networks:
      - totaleasy-network
  totaleasy-database:
    container_name: totaleasy_database
    build:
      context: ./database/
      dockerfile: Dockerfile
    image: totaleasy-database
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DATABASE: 'totaleasy'
    ports:
      - '5432:5432'
    volumes:
      - ./.docker/totaleasy-database:/var/lib/postgresql/data
    networks:
      - totaleasy-network
  totaleasy-cache:
    container_name: totaleasy_cache
    image: redis:7.2
    command: redis-server
    ports:
      - 6379:6379
    volumes:
      - ./.docker/totaleasy-cache:/data
    networks:
      - totaleasy-network
  totaleasy-swagger-ui:
    container_name: totaleasy_swagger_ui
    image: swaggerapi/swagger-ui:v4.17.1
    ports:
      - 8081:8080
    volumes:
      - ./backend/docs/openapi.yaml:/usr/share/nginx/html/openapi.yaml
    environment:
      BASE_URL: /swagger-ui
      API_URL: openapi.yaml
    networks:
      - totaleasy-network
  totaleasy-server:
    container_name: totaleasy_server
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    image: totaleasy-server
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - totaleasy-backend
      - totaleasy-swagger-ui
    networks:
      - totaleasy-network
networks:
  totaleasy-network:
    name: totaleasy_network
    driver: bridge
